@page
@model WanderlustJournal.Pages.Journal.IndexModel
@{
    ViewData["Title"] = "Journal Entries";
}

<div class="container">
    <h1>My Travel Memories</h1>
    
    <div class="card mb-4">
        <div class="card-body">
            <form id="searchForm" method="get" class="row g-3">
                <div class="col-md-6">
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-search"></i></span>
                        <input type="text" id="searchInput" asp-for="SearchString" class="form-control" placeholder="Search by title or location..." />
                        <button id="clearSearch" type="button" class="btn btn-outline-secondary">Clear</button>
                    </div>
                </div>
                
                <div class="col-md-6">
                    <div class="row g-3">
                        <div class="col-md-5">
                            <div class="input-group">
                                <span class="input-group-text">From</span>
                                <input type="date" asp-for="StartDate" class="form-control date-filter" />
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="input-group">
                                <span class="input-group-text">To</span>
                                <input type="date" asp-for="EndDate" class="form-control date-filter" />
                            </div>
                        </div>
                        <div class="col-md-2">
                            <button type="submit" class="btn btn-primary w-100">Filter</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <p>
        <a asp-page="Create" class="btn btn-primary">Add New Memory</a>
    </p>

    @if (!Model.JournalEntries.Any())
    {
        <div class="alert alert-info">
            <p>You haven't recorded any travel memories yet. Click "Add New Memory" to get started!</p>
        </div>
    }
    else
    {
        <div class="row" id="entriesContainer">
            @foreach (var entry in Model.JournalEntries)
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="card h-100 shadow-sm">
                        <div class="card-body">
                            <h5 class="card-title">@entry.Title</h5>
                            <h6 class="card-subtitle mb-2 text-muted">@entry.Location</h6>
                            <p class="card-text">
                                <small class="text-muted">
                                    <i class="bi bi-calendar"></i> @entry.DateVisited.ToString("MMMM d, yyyy")
                                </small>
                            </p>
                            <p class="card-text text-truncate">@entry.Notes</p>
                        </div>
                        <div class="card-footer bg-transparent">
                            <a asp-page="Details" asp-route-id="@entry.Id" class="btn btn-sm btn-info">
                                <i class="bi bi-eye"></i> View
                            </a>
                            <a asp-page="Edit" asp-route-id="@entry.Id" class="btn btn-sm btn-warning">
                                <i class="bi bi-pencil"></i> Edit
                            </a>
                            <a asp-page="Delete" asp-route-id="@entry.Id" class="btn btn-sm btn-danger">
                                <i class="bi bi-trash"></i> Delete
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Scripts {
    <script>
        // Real-time search functionality
        document.addEventListener('DOMContentLoaded', function () {
            const searchInput = document.getElementById('searchInput');
            const clearButton = document.getElementById('clearSearch');
            const searchForm = document.getElementById('searchForm');
            
            // Handle real-time search with debounce
            let debounceTimeout;
            searchInput.addEventListener('input', function() {
                clearTimeout(debounceTimeout);
                debounceTimeout = setTimeout(() => {
                    searchForm.submit();
                }, 500); // 500ms debounce
            });
            
            // Clear search button
            clearButton.addEventListener('click', function() {
                searchInput.value = '';
                
                // Clear date fields
                document.querySelectorAll('.date-filter').forEach(input => {
                    input.value = '';
                });
                
                // Submit the form to refresh results
                searchForm.submit();
            });
        });
    </script>
}
